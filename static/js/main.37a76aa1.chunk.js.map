{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","useState","open","setopen","displayName","language","value","onChange","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setvalue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","width","height","frameBorder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAuCeA,MA7Bf,SAAgBC,GAAQ,IAAD,EACKC,oBAAS,GADd,mBACZC,EADY,KACNC,EADM,KAEXC,EAA2CJ,EAA3CI,YAAaC,EAA8BL,EAA9BK,SAAUC,EAAoBN,EAApBM,MAAOC,EAAaP,EAAbO,SAItC,OACI,yBAAKC,UAAS,2BAAsBN,EAAO,GAAK,cAC5C,yBAAKM,UAAU,gBACVJ,EACD,4BAAQK,KAAK,SAASD,UAAU,sBAAsBE,QAAS,kBAAIP,GAAQ,SAAAQ,GAAQ,OAAIA,OAAW,kBAAC,IAAD,CAAiBC,KAAMV,EAAMW,IAAcC,QAEjJ,kBAAC,aAAD,CACIC,eAVU,SAACC,EAAQC,EAAMX,GACjCC,EAASD,IAUDA,MAAOA,EACPE,UAAU,sBACVU,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMhB,EACNiB,aAAa,EACbC,MAAO,gBCXZC,MAjBf,SAAyBC,EAAKC,GAC1B,IAAMC,EAHK,iBAGkBF,EADW,EAEdxB,oBAAS,WAC/B,IAAM2B,EAAYC,aAAaC,QAAQH,GACvC,OAAkB,OAAdC,EAA2BG,KAAKC,MAAMJ,GACd,oBAAjBF,EACAA,IAEAA,KARyB,mBAEjCpB,EAFiC,KAE1B2B,EAF0B,KAcxC,OAHAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU9B,MAClD,CAACqB,EAAarB,IACV,CAACA,EAAO2B,IC8BJI,MA5Cf,WAAgB,IAAD,EACWb,EAAgB,OAAO,IADlC,mBACNc,EADM,KACAC,EADA,OAESf,EAAgB,MAAM,IAF/B,mBAENgB,EAFM,KAEDC,EAFC,OAGOjB,EAAgB,KAAK,IAH5B,mBAGNkB,EAHM,KAGFC,EAHE,OAIe1C,mBAAS,IAJxB,mBAIN2C,EAJM,KAIEC,EAJF,KAuBb,OAjBAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,uBAAD,OAGLP,EAHK,6BAIJE,EAJI,+BAKHE,EALG,gCASR,KAEH,OAAO,kBAAMM,aAAaF,MAEzB,CAACR,EAAME,EAAKE,IAGb,oCACE,yBAAKlC,UAAU,iBACb,kBAAC,EAAD,CAAQH,SAAS,MAAMD,YAAY,OAAOE,MAAOgC,EAAM/B,SAAUgC,IACjE,kBAAC,EAAD,CAAQlC,SAAS,MAAMD,YAAY,MAAME,MAAOkC,EAAKjC,SAAUkC,IAC/D,kBAAC,EAAD,CAAQpC,SAAS,aAAaD,YAAY,KAAKE,MAAOoC,EAAInC,SAAUoC,KAEtE,yBAAKnC,UAAU,QACb,4BAAQyC,MAAM,SACZL,OAAQA,EACRM,QAAQ,gBACRC,MAAM,OACNC,OAAO,OACPC,YAAY,SCjCtBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.37a76aa1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCompressAlt,faExpandAlt} from '@fortawesome/free-solid-svg-icons';\n\nfunction Editor(props) {\n    const [open, setopen] = useState(true)\n    const { displayName, language, value, onChange } = props;\n    const handleChanege = (editor, data, value) => {\n        onChange(value)\n    }\n    return (\n        <div className={`editor-container ${open ? \"\" : 'collapsed'}`}>\n            <div className=\"editor-title\">\n                {displayName}\n                <button type=\"button\" className=\"expand-collapse-btn\" onClick={()=>setopen(prevOpen=> !prevOpen)}><FontAwesomeIcon icon={open? faCompressAlt:faExpandAlt}/></button>\n            </div>\n            <ControlledEditor\n                onBeforeChange={handleChanege}\n                value={value}\n                className=\"code-mirror-wrapper\"\n                options={{\n                    lineWrapping: true,\n                    lint: true,\n                    mode: language,\n                    lineNumbers: true,\n                    theme: 'material'\n                }}\n            ></ControlledEditor>\n\n        </div>\n    )\n}\n\nexport default Editor\n","import { useState, useEffect } from 'react';\nconst PREFIX = 'codepen-clone-';\n\nfunction useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key;\n    const [value, setvalue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey);\n        if (jsonValue !== null) return JSON.parse(jsonValue);\n        if (typeof initialValue === 'function') {\n            return initialValue();\n        } else {\n            return initialValue;\n        }\n    })\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\n    }, [prefixedKey, value])\n    return [value, setvalue]\n}\n\nexport default useLocalStorage\n","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\nimport useLocalStorage from '../hooks/useLocalStorage';\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html','');\n  const [css, setCss] = useLocalStorage('css','');\n  const [js, setJs] = useLocalStorage('js','');\n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(\n        `\n  <html>\n  <body>${html}</body>\n  <style>${css}</style>\n  <script>${js}</script>\n  </html>\n  `\n      )\n    }, 250);\n\n    return () => clearTimeout(timeout);\n\n  }, [html, css, js])\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml} />\n        <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setCss} />\n        <Editor language=\"javascript\" displayName=\"JS\" value={js} onChange={setJs} />\n      </div>\n      <div className=\"pane\">\n        <iframe title=\"output\"\n          srcDoc={srcDoc}\n          sandbox=\"allow-scripts\"\n          width=\"100%\"\n          height=\"100%\"\n          frameBorder=\"0\"></iframe>\n\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}